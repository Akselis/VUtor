// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VUtor.Data;

#nullable disable

namespace VUtor.Migrations
{
    [DbContext(typeof(ProfileTopicDbContext))]
    [Migration("20230928185510_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProfileTopic", b =>
                {
                    b.Property<int>("TeachingProfilesProfileId")
                        .HasColumnType("int");

                    b.Property<int>("TopicsToTeachTopicId")
                        .HasColumnType("int");

                    b.HasKey("TeachingProfilesProfileId", "TopicsToTeachTopicId");

                    b.HasIndex("TopicsToTeachTopicId");

                    b.ToTable("ProfileTopic");
                });

            modelBuilder.Entity("ProfileTopic1", b =>
                {
                    b.Property<int>("LearningProfilesProfileId")
                        .HasColumnType("int");

                    b.Property<int>("TopicsToLearnTopicId")
                        .HasColumnType("int");

                    b.HasKey("LearningProfilesProfileId", "TopicsToLearnTopicId");

                    b.HasIndex("TopicsToLearnTopicId");

                    b.ToTable("ProfileTopic1");
                });

            modelBuilder.Entity("VUtor.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("VUtor.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ProfileTopic", b =>
                {
                    b.HasOne("VUtor.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("TeachingProfilesProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VUtor.Models.Topic", null)
                        .WithMany()
                        .HasForeignKey("TopicsToTeachTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProfileTopic1", b =>
                {
                    b.HasOne("VUtor.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("LearningProfilesProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VUtor.Models.Topic", null)
                        .WithMany()
                        .HasForeignKey("TopicsToLearnTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
