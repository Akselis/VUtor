@page "/loadfiles"

@using DataAccessLibrary.Data;
@using DataAccessLibrary.Models;
@using DataAccessLibrary;

@inject IConfiguration config
@inject ApplicationDbContext context
<<<<<<< Updated upstream
=======
@inject NavigationManager navigationManger
@inject FileRepository fileManager

<AuthorizeView>
    <Authorized>
        @if(_userFiles is not null)
        {
        <h2>Uploaded files</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Topic</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Resource</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var item in _userFiles)
                {
                    <tr>
                        <td>@item.Topic.Title</td>
                        <td>@item.Title</td>
                        <td>@item.Description</td>
                        <td>
                            @if(string.IsNullOrWhiteSpace(item.FileName) == false)
                            {
                                <a href="@CreateFullPath(item.FileName)">@item.Title</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        }
        <div>
            @foreach(var dir in dirs)
            {
                <div>
                    <a href="@CreateFullPath(dir)">@dir</a>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        @GoToIndexAsync()
    </NotAuthorized>
</AuthorizeView>
>>>>>>> Stashed changes

@if(_userFiles is not null)
{
    <h2>Uploaded files</h2>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Topic</th>
                <th>Title</th>
                <th>Description</th>
                <th>Resource</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in _userFiles)
            {
                <tr>
                    <td>@item.Topic.Title</td>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>
                        @if(string.IsNullOrWhiteSpace(item.FileName) == false)
                        {
                            <a href="@CreateFullPath(item.FileName)">@item.Title</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

    @code {
    private List<TopicEntity> _topics;
    private List<UserFile>? _userFiles;
<<<<<<< Updated upstream
=======
    private List<string>? dirs;
    //private string? userId { get; set; }

>>>>>>> Stashed changes

    private void LoadFiles()
    {
        _topics = context.Topics.ToList();
        _userFiles = context.UserFiles.ToList();
    }
    private string CreateFullPath(string relativePath)
    {
        return Path.Combine(config.GetValue<string>("WebStorageRoot")!, relativePath);
    }

<<<<<<< Updated upstream
=======
    private async Task GoToIndexAsync()
    {
        var returnUrl = navigationManger.ToBaseRelativePath(navigationManger.Uri);
        if (string.IsNullOrWhiteSpace(returnUrl)){
            navigationManger.NavigateTo("Identity/Account/Login", true);
        }
        else
        {
            navigationManger.NavigateTo($"Identity/Account/Login", true);
        }
    }

>>>>>>> Stashed changes
    protected override void OnInitialized()
    {
        dirs = fileManager.GetFoldersInDir(config.GetValue<string>("FileStorage")!);
        LoadFiles();
    }
}
